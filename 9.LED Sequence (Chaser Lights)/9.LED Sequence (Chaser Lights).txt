Code :
// Goal: Create a chasing LED effect

// Define the pin numbers for the LEDs
const int ledPins[] = {2, 4, 6, 8};  // Array to hold the LED pin numbers
const int numLeds = 4;  // Number of LEDs

void setup() {
  // Set all LED pins as output
  for (int i = 0; i < numLeds; i++) {
    pinMode(ledPins[i], OUTPUT);
  }
}

void loop() {
  // Turn on LEDs one by one to create the chasing effect
  for (int i = 0; i < numLeds; i++) {
    digitalWrite(ledPins[i], HIGH);  // Turn on the LED
    delay(200);  // Wait for 200 milliseconds
    digitalWrite(ledPins[i], LOW);  // Turn off the LED
  }

  // Optionally, reverse the direction of the chase
  for (int i = numLeds - 1; i >= 0; i--) {
    digitalWrite(ledPins[i], HIGH);  // Turn on the LED
    delay(200);  // Wait for 200 milliseconds
    digitalWrite(ledPins[i], LOW);  // Turn off the LED
  }
}


Hardware Components
Arduino Uno (or any Arduino Board):

The main controller for the LEDs and the chaser sequence.
LEDs (Multiple):

Typically, 4 to 8 LEDs are used, but more can be added for longer sequences.
Each LED will be connected to different digital output pins on the Arduino.
Resistors (220Ω - 330Ω):

A current-limiting resistor for each LED to protect the LEDs from excessive current. This ensures the LEDs operate safely without burning out.
Jumper Wires:

Used to connect the LEDs to the Arduino board.
Breadboard:

Used for easily connecting the components without soldering.
Pin Connections
LED Connections:

Connect the anode (long leg) of each LED to the respective digital pins on the Arduino (e.g., pins 2, 3, 4, 5).
Connect the cathode (short leg) of each LED to the GND rail on the breadboard through a 220Ω resistor.
Arduino Board:

Ensure that each LED is connected to a different digital pin for sequential control.
Code
cpp
Copy code
// Goal: Create a chasing LED effect

// Define the pin numbers for the LEDs
const int ledPins[] = {2, 3, 4, 5};  // Array to hold the LED pin numbers
const int numLeds = 4;  // Number of LEDs

void setup() {
  // Set all LED pins as output
  for (int i = 0; i < numLeds; i++) {
    pinMode(ledPins[i], OUTPUT);
  }
}

void loop() {
  // Turn on LEDs one by one to create the chasing effect
  for (int i = 0; i < numLeds; i++) {
    digitalWrite(ledPins[i], HIGH);  // Turn on the LED
    delay(200);  // Wait for 200 milliseconds
    digitalWrite(ledPins[i], LOW);  // Turn off the LED
  }

  // Optionally, reverse the direction of the chase
  for (int i = numLeds - 1; i >= 0; i--) {
    digitalWrite(ledPins[i], HIGH);  // Turn on the LED
    delay(200);  // Wait for 200 milliseconds
    digitalWrite(ledPins[i], LOW);  // Turn off the LED
  }
}
How It Works
Pin Setup:

An array ledPins[] is used to define the digital pins where the LEDs are connected (pins 2, 3, 4, 5).
In the setup(), each pin is set as an output using pinMode(). This prepares the pins to send voltage to the LEDs.
Creating the Chasing Effect:

In the loop(), the program runs two sequences:
Forward chase: It turns on each LED one by one, waits for 200 milliseconds (using delay()), and then turns it off.
Reverse chase: After the forward chase, the LEDs are turned on and off in reverse order to complete the chase.
Delays:

The delay(200) function is used to control how fast the chase happens. A shorter delay results in a faster chase, and a longer delay results in a slower chase.
Repeating the Sequence:

After one cycle of LEDs lighting up in both directions, the loop() function repeats, creating a continuous chasing effect.
Testing the Circuit
Connect the LEDs:

Connect the LEDs to the digital pins as described in the pin connection section.
Upload the Code:

Upload the code to the Arduino using the Arduino IDE.
View the Effect:

After uploading, the LEDs should start "chasing" on the breadboard, lighting up one by one in a sequence, then reversing back.
Optional Enhancements
Increase the Number of LEDs:

Add more LEDs to the sequence by expanding the ledPins[] array and adjusting the numLeds value.
Modify Speed:

Adjust the delay() time to change the speed of the LED chase effect.
Add Color LEDs (RGB):

Use RGB LEDs to create a multi-color chasing effect.